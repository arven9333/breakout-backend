"""smthing

Revision ID: d4f84add88b6
Revises: 
Create Date: 2024-09-13 10:27:55.753903

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd4f84add88b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('icon_category',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='user id'),
    sa.Column('username', sa.String(length=127), nullable=True, comment='username'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='email'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='password'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='deleted'),
    sa.Column('ts_create', sa.TIMESTAMP(), nullable=False, comment='Дата и время создания записи'),
    sa.Column('ts_modify', sa.TIMESTAMP(), nullable=False, comment='Дата и время последнего обновления записи'),
    sa.Column('is_deleted', sa.Boolean(), server_default='false', nullable=False, comment='Флаг, что запись удалена'),
    sa.Column('_trigger_off', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='user_items_email_unique'),
    sa.UniqueConstraint('email', name='user_items_email_unique'),
    sa.UniqueConstraint('username', name='user_items_username_unique'),
    sa.UniqueConstraint('username', name='user_items_username_unique')
    )
    op.create_table('icons',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('image', sa.String(length=777), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['icon_category.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='id лога'),
    sa.Column('ip_address', postgresql.INET(), nullable=False, comment='ip адрес'),
    sa.Column('user_id', sa.BigInteger(), server_default='0', nullable=False),
    sa.Column('request_time', sa.TIMESTAMP(), nullable=False, comment='Дата и время запроса'),
    sa.Column('endpoint_name', sa.String(), nullable=False, comment='Название запроса'),
    sa.Column('json_request', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False, comment='json запроса'),
    sa.Column('json_response', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False, comment='json ответа'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maps',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('map_levels',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('map_id', sa.BigInteger(), nullable=False),
    sa.Column('level', sa.Enum('easy', 'medium', 'hard', name='maplevelenum'), nullable=False),
    sa.ForeignKeyConstraint(['map_id'], ['maps.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('map_id', 'level', name='map_levels_unique'),
    sa.UniqueConstraint('map_id', 'level', name='map_levels_unique')
    )
    op.create_table('map_layer',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('map_level_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['map_level_id'], ['map_levels.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('map_layer')
    op.drop_table('map_levels')
    op.drop_table('maps')
    op.drop_table('logs')
    op.drop_table('icons')
    op.drop_table('users')
    op.drop_table('icon_category')
    # ### end Alembic commands ###
